@using YachtLogHoursCalculator.Calculator

<MudCard>
    <MudCardHeader>
        <MudText Typo="Typo.h6">Podsumowanie</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudSimpleTable Bordered="true" Dense="true">

            <thead>
                <tr>
                    <td></td>
                    <td>@EntryType.Moored.ToDisplayName()</td>
                    <td>@EntryType.Sail.ToDisplayName()</td>
                    <td>@EntryType.Engine.ToDisplayName()</td>
                    <td>Łącznie żeglugi</td>
                    <td>Razem</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Z poprzedniej doby</td>
                    <td>@Format(PreviousDay.Moored)</td>
                    <td>@Format(PreviousDay.Sails)</td>
                    <td>@Format(PreviousDay.Engine)</td>
                    <td>@Format(PreviousDay.SailsAndEngine)</td>
                    <td>@Format(PreviousDay.Sum)</td>
                </tr>
                <tr>
                    <td>Bieżąca doba</td>
                    <td>@Format(Summary.Moored)</td>
                    <td>@Format(Summary.Sails)</td>
                    <td>@Format(Summary.Engine)</td>
                    <td>@Format(Summary.SailsAndEngine)</td>
                    <td>@Format(Summary.Sum)</td>
                </tr>
                <tr>
                    <td>Do przeniesienia</td>
                    <td>@Format(NextDay.Moored)</td>
                    <td>@Format(NextDay.Sails)</td>
                    <td>@Format(NextDay.Engine)</td>
                    <td>@Format(NextDay.SailsAndEngine)</td>
                    <td>@Format(NextDay.Sum)</td>
                </tr>
            </tbody>
        </MudSimpleTable>

    </MudCardContent>
</MudCard>


@code {
    [Parameter]
    public List<LogEntry> Entries { get; set; } = new();

    [Parameter]
    public LogEntrySet PreviousDay { get; set; } = LogEntrySet.Empty;

    public LogEntrySet Summary { get; set; } = LogEntrySet.Empty;
    
    public LogEntrySet NextDay { get; set; } = LogEntrySet.Empty;

    public string Format(TimeSpan timeSpan)
    {
        return (int)timeSpan.TotalHours + ":" + ((int)timeSpan.Minutes).ToString().PadLeft(2, '0');
    }

    protected override void OnParametersSet()
    {
        Summary = LogEntrySet.FromEntries(Entries);
    NextDay = LogEntrySet.FromEntries(Entries, PreviousDay);
        
        StateHasChanged();
        base.OnParametersSet();
    }
}
